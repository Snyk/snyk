{
  "root": true,
  "extends": ["eslint:recommended", "prettier"],
  "env": {
    "node": true,
    "es2017": true
  },
  "rules": {
    "no-prototype-builtins": "off",
    "require-atomic-updates": "off",
    "no-restricted-imports": [
      "error",
      { "paths": ["lodash"], "patterns": ["lodash/*"] }
    ],
    "no-buffer-constructor": "error"
  },
  "overrides": [
    {
      "files": ["*.ts"],
      "parser": "@typescript-eslint/parser",
      "plugins": ["@typescript-eslint"],
      "extends": [
        "plugin:@typescript-eslint/eslint-recommended",
        "plugin:@typescript-eslint/recommended",
        "prettier/@typescript-eslint"
      ],
      "rules": {
        "@typescript-eslint/explicit-function-return-type": "off",
        "@typescript-eslint/no-explicit-any": "off",
        "@typescript-eslint/no-empty-function": "warn",

        // non-null assertions compromise the type safety somewhat, but many
        // our types are still imprecisely defined and we don't use noImplicitAny
        // anyway, so for the time being assertions are allowed
        "@typescript-eslint/no-non-null-assertion": "warn",

        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-unused-vars": "error",
        "id-blacklist": ["error", "exports"] // in TS, use "export" instead of Node's "module.exports"
      }
    },
    {
      "files": ["*.spec.ts"],
      "env": {
        "jest": true
      }
    }
  ]
}
